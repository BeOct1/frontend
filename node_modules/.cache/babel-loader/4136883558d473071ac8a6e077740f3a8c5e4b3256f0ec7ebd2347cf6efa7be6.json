{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bitrus.ed\\\\Desktop\\\\movie-recommendation-app\\\\frontend\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const [user, setUser] = useState(null);\n\n  // Refresh access token using refresh token cookie\n  const refreshAccessToken = useCallback(async () => {\n    try {\n      const res = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/auth/refresh`, {\n        method: 'POST',\n        credentials: 'include'\n      });\n      const data = await res.json();\n      if (res.ok && data.token) {\n        localStorage.setItem('token', data.token);\n        setIsAuthenticated(true);\n        return data.token;\n      } else {\n        logout();\n        return null;\n      }\n    } catch {\n      logout();\n      return null;\n    }\n  }, []);\n  useEffect(() => {\n    if (!localStorage.getItem('token')) {\n      // Try to refresh on mount if no token\n      refreshAccessToken();\n    }\n    if (isAuthenticated && !user) {\n      fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/profile`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        credentials: 'include' // for HTTP-only cookies if backend supports\n      }).then(res => res.json()).then(data => setUser(data)).catch(() => setUser(null));\n    }\n  }, [isAuthenticated, user, refreshAccessToken]);\n  const login = (profile, token) => {\n    setIsAuthenticated(true);\n    setUser(profile);\n    if (token) {\n      localStorage.setItem('token', token);\n      // Optionally, set cookie via backend Set-Cookie header\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n    setUser(null);\n    // Optionally, clear cookie via backend endpoint\n    fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/auth/logout`, {\n      method: 'POST',\n      credentials: 'include'\n    }).catch(() => {});\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      logout,\n      refreshAccessToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"1CIQRCMcPNu2qD7t7uINS4nV/T8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","localStorage","getItem","user","setUser","refreshAccessToken","res","fetch","process","env","REACT_APP_API_URL","method","credentials","data","json","ok","token","setItem","logout","headers","then","catch","login","profile","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Bitrus.ed/Desktop/movie-recommendation-app/frontend/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Refresh access token using refresh token cookie\r\n  const refreshAccessToken = useCallback(async () => {\r\n    try {\r\n      const res = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/auth/refresh`, {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok && data.token) {\r\n        localStorage.setItem('token', data.token);\r\n        setIsAuthenticated(true);\r\n        return data.token;\r\n      } else {\r\n        logout();\r\n        return null;\r\n      }\r\n    } catch {\r\n      logout();\r\n      return null;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem('token')) {\r\n      // Try to refresh on mount if no token\r\n      refreshAccessToken();\r\n    }\r\n    if (isAuthenticated && !user) {\r\n      fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/profile`, {\r\n        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` },\r\n        credentials: 'include', // for HTTP-only cookies if backend supports\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => setUser(data))\r\n        .catch(() => setUser(null));\r\n    }\r\n  }, [isAuthenticated, user, refreshAccessToken]);\r\n\r\n  const login = (profile, token) => {\r\n    setIsAuthenticated(true);\r\n    setUser(profile);\r\n    if (token) {\r\n      localStorage.setItem('token', token);\r\n      // Optionally, set cookie via backend Set-Cookie header\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n    // Optionally, clear cookie via backend endpoint\r\n    fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/auth/logout`, {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n    }).catch(() => {});\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, user, login, logout, refreshAccessToken }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}