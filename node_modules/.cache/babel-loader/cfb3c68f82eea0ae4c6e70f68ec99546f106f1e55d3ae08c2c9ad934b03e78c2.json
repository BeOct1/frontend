{"ast":null,"code":"import axios from 'axios';\n\n// Centralized Axios instance with JWT and error handling\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL ? process.env.REACT_APP_API_URL + '/api' : 'http://localhost:5000/api',\n  withCredentials: true // for refresh token cookie\n});\n\n// Attach JWT from localStorage if present\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Centralized error handler\nexport function handleApiError(error) {\n  if (error.response && error.response.data && error.response.data.message) {\n    return error.response.data.message;\n  }\n  if (error.message) return error.message;\n  return 'An error occurred.';\n}\n\n// --- FAVORITES ---\nconst favoritesCache = {\n  list: null\n};\nexport async function getFavorites(force = false) {\n  if (favoritesCache.list && !force) return favoritesCache.list;\n  try {\n    const {\n      data\n    } = await api.get('/favorites');\n    favoritesCache.list = data;\n    return data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n}\nexport async function addFavorite(movie) {\n  try {\n    const {\n      data\n    } = await api.post('/favorites', movie);\n    favoritesCache.list = null; // Invalidate cache\n    return data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n}\nexport async function removeFavorite(movieId) {\n  try {\n    const {\n      data\n    } = await api.delete(`/favorites/${movieId}`);\n    favoritesCache.list = null;\n    return data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n}\n\n// --- WATCHLISTS ---\nconst watchlistsCache = {\n  list: null\n};\nexport async function getWatchlists(force = false) {\n  if (watchlistsCache.list && !force) return watchlistsCache.list;\n  try {\n    const {\n      data\n    } = await api.get('/watchlists');\n    watchlistsCache.list = data;\n    return data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n}\nexport async function createWatchlist(watchlist) {\n  try {\n    const {\n      data\n    } = await api.post('/watchlists', watchlist);\n    watchlistsCache.list = null;\n    return data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n}\nexport async function addMovieToWatchlist(watchlistId, movie) {\n  try {\n    const {\n      data\n    } = await api.post(`/watchlists/${watchlistId}/movies`, movie);\n    watchlistsCache.list = null;\n    return data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n}\nexport async function removeMovieFromWatchlist(watchlistId, movieId) {\n  try {\n    const {\n      data\n    } = await api.delete(`/watchlists/${watchlistId}/movies/${movieId}`);\n    watchlistsCache.list = null;\n    return data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n}\n\n// --- REVIEWS ---\nexport async function getUserReviews(userId) {\n  try {\n    const {\n      data\n    } = await api.get(`/reviews/user/${userId}`);\n    return data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n}\nexport async function addReview(review) {\n  try {\n    const {\n      data\n    } = await api.post('/reviews', review);\n    return data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n}\nexport async function updateReview(id, review) {\n  try {\n    const {\n      data\n    } = await api.put(`/reviews/${id}`, review);\n    return data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n}\nexport async function deleteReview(id) {\n  try {\n    const {\n      data\n    } = await api.delete(`/reviews/${id}`);\n    return data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n}","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","handleApiError","error","response","data","message","favoritesCache","list","getFavorites","force","get","addFavorite","movie","post","removeFavorite","movieId","delete","watchlistsCache","getWatchlists","createWatchlist","watchlist","addMovieToWatchlist","watchlistId","removeMovieFromWatchlist","getUserReviews","userId","addReview","review","updateReview","id","put","deleteReview"],"sources":["C:/Users/Bitrus.ed/Desktop/movie-recommendation-app/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Centralized Axios instance with JWT and error handling\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL\r\n    ? process.env.REACT_APP_API_URL + '/api'\r\n    : 'http://localhost:5000/api',\r\n  withCredentials: true, // for refresh token cookie\r\n});\r\n\r\n// Attach JWT from localStorage if present\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers['Authorization'] = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Centralized error handler\r\nexport function handleApiError(error) {\r\n  if (error.response && error.response.data && error.response.data.message) {\r\n    return error.response.data.message;\r\n  }\r\n  if (error.message) return error.message;\r\n  return 'An error occurred.';\r\n}\r\n\r\n// --- FAVORITES ---\r\nconst favoritesCache = { list: null };\r\nexport async function getFavorites(force = false) {\r\n  if (favoritesCache.list && !force) return favoritesCache.list;\r\n  try {\r\n    const { data } = await api.get('/favorites');\r\n    favoritesCache.list = data;\r\n    return data;\r\n  } catch (error) {\r\n    throw handleApiError(error);\r\n  }\r\n}\r\nexport async function addFavorite(movie) {\r\n  try {\r\n    const { data } = await api.post('/favorites', movie);\r\n    favoritesCache.list = null; // Invalidate cache\r\n    return data;\r\n  } catch (error) {\r\n    throw handleApiError(error);\r\n  }\r\n}\r\nexport async function removeFavorite(movieId) {\r\n  try {\r\n    const { data } = await api.delete(`/favorites/${movieId}`);\r\n    favoritesCache.list = null;\r\n    return data;\r\n  } catch (error) {\r\n    throw handleApiError(error);\r\n  }\r\n}\r\n\r\n// --- WATCHLISTS ---\r\nconst watchlistsCache = { list: null };\r\nexport async function getWatchlists(force = false) {\r\n  if (watchlistsCache.list && !force) return watchlistsCache.list;\r\n  try {\r\n    const { data } = await api.get('/watchlists');\r\n    watchlistsCache.list = data;\r\n    return data;\r\n  } catch (error) {\r\n    throw handleApiError(error);\r\n  }\r\n}\r\nexport async function createWatchlist(watchlist) {\r\n  try {\r\n    const { data } = await api.post('/watchlists', watchlist);\r\n    watchlistsCache.list = null;\r\n    return data;\r\n  } catch (error) {\r\n    throw handleApiError(error);\r\n  }\r\n}\r\nexport async function addMovieToWatchlist(watchlistId, movie) {\r\n  try {\r\n    const { data } = await api.post(`/watchlists/${watchlistId}/movies`, movie);\r\n    watchlistsCache.list = null;\r\n    return data;\r\n  } catch (error) {\r\n    throw handleApiError(error);\r\n  }\r\n}\r\nexport async function removeMovieFromWatchlist(watchlistId, movieId) {\r\n  try {\r\n    const { data } = await api.delete(`/watchlists/${watchlistId}/movies/${movieId}`);\r\n    watchlistsCache.list = null;\r\n    return data;\r\n  } catch (error) {\r\n    throw handleApiError(error);\r\n  }\r\n}\r\n\r\n// --- REVIEWS ---\r\nexport async function getUserReviews(userId) {\r\n  try {\r\n    const { data } = await api.get(`/reviews/user/${userId}`);\r\n    return data;\r\n  } catch (error) {\r\n    throw handleApiError(error);\r\n  }\r\n}\r\nexport async function addReview(review) {\r\n  try {\r\n    const { data } = await api.post('/reviews', review);\r\n    return data;\r\n  } catch (error) {\r\n    throw handleApiError(error);\r\n  }\r\n}\r\nexport async function updateReview(id, review) {\r\n  try {\r\n    const { data } = await api.put(`/reviews/${id}`, review);\r\n    return data;\r\n  } catch (error) {\r\n    throw handleApiError(error);\r\n  }\r\n}\r\nexport async function deleteReview(id) {\r\n  try {\r\n    const { data } = await api.delete(`/reviews/${id}`);\r\n    return data;\r\n  } catch (error) {\r\n    throw handleApiError(error);\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}